<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>ActiveInstalls</web>
  <name>InstallsWithExtension</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1435159214000</creationDate>
  <parent>ActiveInstalls.TotalCounterValue2</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1435160739000</date>
  <contentUpdateDate>1435160739000</contentUpdateDate>
  <version>1.1</version>
  <title>InstallsWithExtension</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{include reference="ActiveInstalls.QueryVariables"/}}
{{velocity}}
##=========================
## Get number of active installs running a given extension.
## To Use
## {{include document="ActiveInstalls.InstallsWithExtension" /}}
## &lt;&lt;velocity&gt;&gt;   &lt;-- actually you would use {{ but we don't want to break the parsing
## #InstallsWithExtension_get("myExtension")
## The result is $InstallsWithExtension_lastResult !
## &lt;&lt;/velocity&gt;&gt;
##=========================
##
#macro(InstallsWithExtension_get, $extension)
#set($InstallsWithExtension_snapshotQueryFragment = "AND extensions.id:" + '\"' + $extension + '\"')
#set ($query = "
{
   ""query"": {
      ""query_string"": {
         ""lowercase_expanded_terms"": false,
         ""query"": ""_timestamp:[now-1d TO *] AND distributionId:\""$distributionId\"" $InstallsWithExtension_snapshotQueryFragment""
      }
   },
   ""aggs"": {
      ""instanceId_count"": {
         ""cardinality"": {
            ""field"": ""instanceId""
         }
      }
   }
}
")
#set ($InstallsWithExtension_result = $services.activeinstalls.searchInstalls("install2", $query, {"search_type": "count"}))
## If there's an error and the "xpage=plain" URL parameter is not passed (ie it's not called by the Counter widget) then display the error if any. Otherwise display the invalid numeric result.
#if (!$InstallsWithExtension_result)
  #set ($errorText = $!services.activeinstalls.lastError)
  #if ("$!request.xpage" != 'plain')
    {{error}}{{{$errorText}}}{{/error}}
  #else
    #set($InstallsWithExtension_lastResult = 0)
  #end
#else
#set($InstallsWithExtension_lastResult = $InstallsWithExtension_result.getAsJsonObject("aggregations").getAsJsonObject("instanceId_count").getAsJsonPrimitive("value").getAsLong())
#end
#end
{{/velocity}}</content>
</xwikidoc>
